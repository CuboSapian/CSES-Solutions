// https://cses.fi/problemset/task/1638/

#include<bits/stdc++.h>
using namespace std;

#define ll long long int
#define mod 1000000007
#define vll vector<ll>
#define pb push_back
#define pll pair<ll,ll>
#define vpll vector<pll>
#define vch vector<char>
#define vvll vector<vector<ll>>
#define endl "\n"
#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)

vvll moves={ {1,0} , {0,1} };

ll rec(ll i,ll j, vector<string>& vec, ll n,vvll &dp)
{
	if(dp[i][j]!=-1)
		return dp[i][j];
	if(i==n-1 && j==n-1)
		return 1;
	ll ans=0;
	for(int k=0;k<2;k++)
	{
		ll x=i+moves[k][0] , y=j+moves[k][1];
		if(x>=0 && x<n && y>=0 && y<n && vec[x][y] != '*')
			ans = (ans %mod + rec(x,y,vec,n,dp)%mod)%mod;
	}
	return dp[i][j]=ans;
}

void solve()
{
	ll n;
	cin>>n;
	vector<string> vec(n);
	vvll dp(n+1, vll(n+1 , 0));
	for(int i=0;i<n;i++)
		cin>>vec[i];
	for(int i=n;i>=0;i--)
	{
		for(int j=n;j>=0;j--)
		{
			if(i==n || j==n)
				dp[i][j]=0;
			else if(i==n-1 && j==n-1 && vec[i][j]!='*')
				dp[i][j]=1;
			else
			{
				if(vec[i][j] != '*')
					dp[i][j] = (dp[i+1][j]%mod + dp[i][j+1]%mod)%mod;
				else
					dp[i][j]=0;
			}
		}
	}
	cout<<dp[0][0]<<endl;
}

int main()
{
	fastio();
	ll t=1;
	// cin>>t;
	while(t--)
	{
		solve();
	}
	return 0;
}
